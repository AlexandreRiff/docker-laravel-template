services:
  cli:
    build:
      context: ../..
      dockerfile: ./docker/Dockerfile
      target: cli
    image: php-cli
    container_name: php-cli
    command: >
      sh -c \
      "php artisan migrate:fresh --seed --force
      && php artisan optimize:clear"
    networks:
      - mysql
      - redis
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy

  php:
    build:
      context: ../..
      dockerfile: ./docker/Dockerfile
      target: php
    image: php-fpm
    container_name: php-fpm
    volumes:
      - storage-public-volume:/var/www/html/storage/app/public
    networks:
      - web
      - mysql
      - redis
    restart: on-failure
    depends_on:
      cli:
        condition: service_completed_successfully

  web:
    build:
      context: ../..
      dockerfile: ./docker/Dockerfile
      target: web
    image: web
    container_name: web
    environment:
      FPM_HOST: php-fpm:9000
    volumes:
      - storage-public-volume:/var/www/html/public/storage
    ports:
      - 80:80
    networks:
      - web
    restart: on-failure
    depends_on:
      php:
        condition: service_started

  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel
      MYSQL_DATABASE: laravel
    volumes:
      - mysql-volume:/var/lib/mysql
    ports:
      - 3306:3306
    networks:
      - mysql
    restart: on-failure
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p$$MYSQL_ROOT_PASSWORD",
        ]
      interval: 5s
      timeout: 10s
      retries: 3

  redis:
    image: redis:alpine
    container_name: redis
    command: "redis-server --requirepass laravel"
    volumes:
      - redis-volume:/data
    networks:
      - redis
    restart: on-failure
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 10s
      retries: 3

volumes:
  storage-public-volume: {}
  mysql-volume: {}
  redis-volume: {}
networks:
  web:
    driver: bridge
  mysql:
    driver: bridge
  redis:
    driver: bridge
